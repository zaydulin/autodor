# Generated by Django 4.2.4 on 2025-08-13 14:45

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Advert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('brand', models.CharField(max_length=255, verbose_name='марка')),
                ('model_auto', models.CharField(max_length=255, verbose_name='модель')),
                ('link', models.URLField(max_length=500, verbose_name='Ссылка')),
                ('original_link', models.URLField(blank=True, max_length=500, null=True, verbose_name='Оригинальная ссылка')),
                ('price', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Стоимость')),
                ('currency', models.CharField(max_length=10, verbose_name='Валюта')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('images', models.JSONField(blank=True, null=True, verbose_name='Список ссылок на изображения')),
                ('subtitle', models.CharField(blank=True, max_length=255, null=True, verbose_name='Подзаголовок')),
                ('article', models.CharField(blank=True, max_length=100, null=True, verbose_name='Артикул')),
                ('address', models.CharField(blank=True, max_length=100, null=True, verbose_name='Адрес')),
                ('mileage', models.PositiveIntegerField(blank=True, null=True, verbose_name='Километраж (км)')),
                ('color', models.CharField(blank=True, max_length=50, null=True, verbose_name='Цвет')),
                ('doors', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Количество дверей')),
                ('power', models.PositiveIntegerField(blank=True, null=True, verbose_name='Мощность (л.с.)')),
                ('engine_volume', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True, verbose_name='Объём двигателя (л)')),
                ('year', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2100)], verbose_name='Год выпуска')),
                ('transmission', models.CharField(blank=True, choices=[('manual', 'Механика'), ('automatic', 'Автомат'), ('cvt', 'Вариатор'), ('robot', 'Робот')], max_length=20, null=True, verbose_name='Коробка передач')),
                ('fuel', models.CharField(blank=True, choices=[('gasoline', 'Бензин'), ('diesel', 'Дизель'), ('electric', 'Электро'), ('hybrid', 'Гибрид')], max_length=20, null=True, verbose_name='Топливо')),
                ('drive', models.CharField(blank=True, choices=[('fwd', 'Передний'), ('rwd', 'Задний'), ('awd', 'Полный')], max_length=10, null=True, verbose_name='Привод')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Объявление',
                'verbose_name_plural': 'Объявления',
            },
        ),
        migrations.CreateModel(
            name='AdvertAplication',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('price', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Стоимость')),
                ('status', models.CharField(choices=[('new', 'Новая'), ('in_progress', 'В обработке'), ('done', 'Завершена')], default='new', max_length=20, verbose_name='Статус')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('advert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requests', to='moderation.advert', verbose_name='Объявление')),
                ('user', models.ManyToManyField(related_name='advert_requests', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('user_drivers', models.ManyToManyField(related_name='advert_drivers', to=settings.AUTH_USER_MODEL, verbose_name='Водители')),
                ('user_menager', models.ManyToManyField(related_name='advert_menager', to=settings.AUTH_USER_MODEL, verbose_name='Менеджеры')),
            ],
            options={
                'verbose_name': 'Заявка на объявление',
                'verbose_name_plural': 'Заявки на объявления',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Collaborations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Имя')),
                ('email', models.TextField(verbose_name='Электронная почта')),
                ('subject', models.TextField(verbose_name='Обьект сотрудничества')),
                ('phone', models.TextField(verbose_name='Номер телефона')),
                ('message', models.TextField(verbose_name='Сообщение')),
            ],
            options={
                'verbose_name': 'Запрос на сотрудничество',
                'verbose_name_plural': 'Запросы на сотрудничество',
            },
        ),
        migrations.CreateModel(
            name='Stopwords',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=120, verbose_name='Стоп слова')),
            ],
            options={
                'verbose_name': 'Стоп слово',
                'verbose_name_plural': 'Стоп слова',
            },
        ),
        migrations.CreateModel(
            name='Subscriptions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(blank=True, max_length=500, null=True, unique=True, verbose_name='Email')),
                ('create', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name': 'Подписки',
                'verbose_name_plural': 'Подписки',
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Дата')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.SmallIntegerField(choices=[(0, 'Новое'), (1, 'Обратная связь'), (2, 'В процессе'), (3, 'Решенный'), (4, 'Закрытый')], default=0, verbose_name='Статус')),
                ('themas', models.TextField(verbose_name='Тема')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ticket_manager', to=settings.AUTH_USER_MODEL, verbose_name='Менеджер')),
            ],
            options={
                'verbose_name': 'Тикет',
                'verbose_name_plural': 'Тикеты',
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='TicketComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.SmallIntegerField(choices=[(0, 'Заказчик'), (1, 'Поддержка')], default=1, editable=False, verbose_name='Статус')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Дата')),
                ('content', models.TextField(verbose_name='Комментарий')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='moderation.ticket', verbose_name='Ticket')),
            ],
            options={
                'verbose_name': 'Комментарий тикета',
                'verbose_name_plural': 'Комментарии тикета',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='TicketCommentMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='ticket/%Y/%m/%d/tiket_file/')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media', to='moderation.ticketcomment')),
            ],
            options={
                'verbose_name': 'Файл комментария тикета',
                'verbose_name_plural': 'Файлы комментариев тикета',
            },
        ),
        migrations.CreateModel(
            name='Notificationgroups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Время отправки')),
                ('message', models.TextField()),
                ('slug', models.TextField(editable=False)),
                ('content_type', models.ForeignKey(limit_choices_to={'model__in': ('blogs', 'pages', 'categorysblogs', 'tagsblogs')}, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ManyToManyField(to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Груповое уведомление',
                'verbose_name_plural': 'Груповые уведомления',
            },
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('status', models.SmallIntegerField(choices=[(0, 'Отправлено'), (1, 'Прочитано')], default=1, editable=False, verbose_name='Статус')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Дата')),
                ('content', models.TextField(verbose_name='Сообщение')),
                ('applications', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chatmessage', to='moderation.advertaplication', verbose_name='Чат')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('views', models.ManyToManyField(related_name='viewsmessage', to=settings.AUTH_USER_MODEL, verbose_name='Пользователи')),
            ],
            options={
                'verbose_name': 'Сообщение',
                'verbose_name_plural': 'Сообщения',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='CallSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True)),
                ('caller_offer', models.TextField(blank=True, null=True)),
                ('callee_answer', models.TextField(blank=True, null=True)),
                ('caller_ice_candidates', models.TextField(default='[]')),
                ('callee_ice_candidates', models.TextField(default='[]')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='moderation.advertaplication')),
                ('callee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calls_received', to=settings.AUTH_USER_MODEL)),
                ('caller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calls_made', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AdvertExpense',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255, verbose_name='Статья расходов')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Сумма')),
                ('date', models.DateField(verbose_name='Дата расхода')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления')),
                ('aplication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expenses', to='moderation.advertaplication', verbose_name='Объявление')),
            ],
            options={
                'verbose_name': 'Расход по заявке',
                'verbose_name_plural': 'Расходы по заявкам',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='AdvertDocument',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file', models.FileField(upload_to='advert_documents/', verbose_name='Файл документа')),
                ('document_type', models.CharField(choices=[('invoice', 'Накладная'), ('contract', 'Договор'), ('customs', 'Таможенная')], max_length=20, verbose_name='Тип документа')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('advert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='moderation.advert', verbose_name='Объявление')),
            ],
            options={
                'verbose_name': 'Документ заявки',
                'verbose_name_plural': 'Документы заявки',
                'ordering': ['-created_at'],
            },
        ),
    ]
